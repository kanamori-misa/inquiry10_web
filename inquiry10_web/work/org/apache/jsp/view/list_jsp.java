/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-23 08:49:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import bean.Form;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Form");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("\tlist.jsp\r\n");
      out.write("\t一覧画面\r\n");
      out.write("\t金森未紗\r\n");
      out.write("\t2023/06/23\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>お問い合わせ一覧</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table>\r\n");
      out.write("\t<tr style=\"text-align:center\">\r\n");
      out.write("\t\t<td style=\"text-align:center; width:500px; font-size:40px;\">お問い合わせ一覧</td>\r\n");
      out.write("\t\t<td><a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/bookmark.jsp\">ブックマーク一覧</a></td>\r\n");
      out.write("\t\t<td><a href=\"");
      out.print(request.getContextPath() );
      out.write("/view/userinsert.jsp\">管理者登録</a></td>\r\n");
      out.write("\t\t<td><a href=\"");
      out.print(request.getContextPath() );
      out.write("/logout\">ログアウト</a></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<table style=\"margin:auto; width:1500px\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>No.</td>\r\n");
      out.write("\t\t\t<td>氏名</td>\r\n");
      out.write("\t\t\t<td>種類</td>\r\n");
      out.write("\t\t\t<td>問い合わせ日時</td>\r\n");
      out.write("\t\t\t<td>お問い合わせ内容</td>\r\n");
      out.write("\t\t\t<td>返信状況</td>\r\n");
      out.write("\t\t\t<td>ブックマーク登録</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\t\t");

				ArrayList<Form> list =(ArrayList<Form>)request.getAttribute("list");
				if(list != null){
					for(int i=0;i<list.size();i++){
						Form forms = (Form)list.get(i);
				
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style=\"text-align:center; width:200px\"><a href=\"");
      out.print(request.getContextPath() );
      out.write("/detail?formid=");
      out.print(forms.getFormid());
      out.write('"');
      out.write('>');
      out.print(forms.getFormid());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(forms.getName());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(forms.getAge());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(forms.getForm());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(forms.getDate());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(forms.getContent());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(forms.getMailstate());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><a href = \"");
      out.print(request.getContextPath() );
      out.write("/bookmark\">ブックマーク</a></td>\r\n");
      out.write("\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			}
		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
